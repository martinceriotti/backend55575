paths:
  /api/products/test/mockingProducts:
    get:
      summary: This is a mocking of products. 
      tags:
        - Products
      responses:
        "200":
          description: Products mocking ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/ProductMocked'
        "500":
          description: Internal server error.      
  /api/products:
    get:
      summary: This service lists all the products of the ecommerce.
      tags:
        - Products
      responses:
        "200":
          description: Products listed ok from database.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Product'
        "500":
          description: Internal server error.
  /api/users/{uid}:
    get:
      summary: Este servicio obtiene un solo usuario a partir de su uid (identificaro del usuario)
      tags:
        - Products
      parameters:
        - name: uid
          in: path
          required: true
          description: El id del usuario a buscar
          schema:
            $type: String
      responses:
        "200":
          description: El usuario fue obtenido correctamente de nuestra BDD
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Product'
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o fallo en la conexión
    put:
      summary: Este servicio actualiza el usuario a partir de su uid
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: path
          required: true
          description: El id del usuario a actualizar
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateUser'
      responses:
        "200":
          description: El usuario fue actualizado correctamente
        "404":
          description: El usuario no fue encontrado en BDD
        "500":
          description:  Error interno del servidor, usualmente generado por una query defectuosa o fallo en la conexión
components:
  schemas:
    Product:
      type: Object
      properties:
        _id:
          type: ObjectId
          description: Product Id generated by mongodb.
        title:
          type: String
          description: Product title.
        description:
          type: String
          description: Product description.
        price:
          type: Number
          description: Product Price.
        thumbnail:
          type: String
          description: Product thumbnail.
        code:
          type: String
          description: Internal product code.
        stock:
          type: Number
          description: Product Stock.
      example:
        _id: ObjectId("654fefc59c5bdc60a07bfc6f")
        title: Shoes
        description: Trainning Shoes from Japan.
        price: 200
        thumbnail: http://urlropa1.jpg
        code: Xd9ofa
        stock: 10  
    ProductMocked:
      type: Object
      properties:
        title:
          type: String
          description: Product title.
        descripcion:
          type: String
          description: Product description.
        price:
          type: Number
          description: Product Price.
        thumbnail:
          type: String
          description: Product thumbnail.
        code:
          type: String
          description: Internal product code.
        stock:
          type: Number
          description: Product Stock.
      example:
        title: Shoes
        description: Trainning Shoes from Japan.
        price: 200
        thumbnail: http://urlropa1.jpg
        code: Xd9ofa
        stock: 10
  requestBodies:
    updateUser:
      type: Object
      properties:
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Correo del usuario
        password:
          type: String
          description: Password del usuario
        role:
          type: String
          description: Rol del usuario
      example:
        first_name: Coder
        last_name: House
        email: ch@coder.com
        password: $%#ASD
        role: admin
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT